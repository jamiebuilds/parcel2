[ignore]

[lints]

# We're going to be as strict as possible with types as long as we can
all=error

[options]

# Map imports to internal packages to their location in the repo instead of searching from node_modules
module.name_mapper='^@parcel\/config-\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/configs/\1/src/index'
module.name_mapper='^@parcel\/loader-\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/loaders/\1/src/index'
module.name_mapper='^@parcel\/packager-\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/packagers/\1/src/index'
module.name_mapper='^@parcel\/reporter-\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/reporters/\1/src/index'
module.name_mapper='^@parcel\/resolver-\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/resolvers/\1/src/index'
module.name_mapper='^@parcel\/server-\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/servers/\1/src/index'
module.name_mapper='^@parcel\/transform-\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/transforms/\1/src/index'
module.name_mapper='^@parcel\/\([a-zA-Z0-9_\-]+\)$' -> '<PROJECT_ROOT>/src/core/\1/src/index'

# Enable `class { properties }` (I want to believe)
esproposal.class_instance_fields=enable
esproposal.class_static_fields=enable

# Let's not use the `export * as` syntax, it sounds like it will be rejected by TC39 (disabled by default)
# esproposal.export_star_as=disable

# Let's not use decorators... they are a mess of a proposal (disabled by default)
# esproposal.decorators=disable

# Treat function params as constants, feel free to disable this if it's not helping
experimental.const_params=true

# Output warnings in error output
include_warnings=true

# Babel automatically adds `"use strict";`
module.use_strict=true

# Pleas use `$FlowFixMe` instead of `any`
suppress_type=$FlowFixMe

# Cause duh
emoji=true

# Never set this to `true`, it is a bad idea
all=false
